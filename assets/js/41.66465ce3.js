(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{434:function(t,e,v){"use strict";v.r(e);var r=v(2),s=Object(r.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"linux-设备驱动"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#linux-设备驱动"}},[t._v("#")]),t._v(" Linux 设备驱动")]),t._v(" "),e("p",[t._v("设备驱动程序作用是初始化实际硬件设备, 并将用户的操作映射到实际硬件的设备特有操作上, 驱动提供的是一种机制而不是策略, 即提供可以做什么的功能, 而不是提供应该怎么使用这些功能")]),t._v(" "),e("h2",{attrs:{id:"linux-基本设备类型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#linux-基本设备类型"}},[t._v("#")]),t._v(" Linux 基本设备类型")]),t._v(" "),e("p",[t._v("Linux 系统将设备分成如下三种基本类型, 后续介绍的特定的设备基本都是基于这几个基本类型")]),t._v(" "),e("ol",[e("li",[t._v("字符设备")])]),t._v(" "),e("p",[t._v("字符设备即是个能够像字节流一样被访问的设备，通常需要实现open, close, read, write系统调用")]),t._v(" "),e("ol",{attrs:{start:"2"}},[e("li",[t._v("块设备")])]),t._v(" "),e("p",[t._v("块设备即进行I/O操作时, 每次只能传输一个或多个完整的块, 每块包含512字节(或2的更高次幂的数据)")]),t._v(" "),e("ol",{attrs:{start:"3"}},[e("li",[t._v("网络接口")])]),t._v(" "),e("p",[t._v("任何网络事务都经过一个网络接口形成, 即一个能够和其他主机交换数据的设备, 接口通常是一个硬件设备, 或者纯软件设备(如loopback设备)")]),t._v(" "),e("h2",{attrs:{id:"linux-设备驱动模型基本数据结构"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#linux-设备驱动模型基本数据结构"}},[t._v("#")]),t._v(" Linux 设备驱动模型基本数据结构")]),t._v(" "),e("p",[t._v("设备驱动模型都是建立在如下几个基本数据结构中, 其中总线是设备间进行数据流通的通路, 设备挂载在总线上, 每个总线上可以由多个设备, 每个设备对应一个驱动程序, 通过驱动程序完成设备的初始化, 并使设备功能正常工作")]),t._v(" "),e("h3",{attrs:{id:"kobject-对象"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#kobject-对象"}},[t._v("#")]),t._v(" kobject 对象")]),t._v(" "),e("p",[t._v("kobject 是组成设备模型的基本结构, 单独的 kobject 对象一般很少使用(甚至不会使用), kobject 对象都是被嵌入到其他数据结构中, 在其他数据结构中担任很重要的作用, 其他说明, 请参考"),e("RouterLink",{attrs:{to:"/driver/modules/modules.html#kobject"}},[t._v("kobject对象")]),t._v("一节")],1),t._v(" "),e("h3",{attrs:{id:"linux-总线对象"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#linux-总线对象"}},[t._v("#")]),t._v(" Linux 总线对象")]),t._v(" "),e("p",[t._v("总线是用于计算机内部数据流通的通路，内核支持的每一种总线类型都由一个"),e("code",[t._v("bus_type")]),t._v("对象描述, 详情请参考"),e("RouterLink",{attrs:{to:"/driver/modules/modules.html#bus_type"}},[t._v("Linux 总线对象")])],1),t._v(" "),e("h3",{attrs:{id:"linux-设备对象"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#linux-设备对象"}},[t._v("#")]),t._v(" Linux 设备对象")]),t._v(" "),e("p",[t._v("设备驱动程序中, 每个设备是由一个"),e("code",[t._v("device")]),t._v("对象来描述, 详情请参考"),e("RouterLink",{attrs:{to:"/driver/modules/modules.html#device"}},[t._v("Linux 设备对象")])],1),t._v(" "),e("h3",{attrs:{id:"linux-驱动程序对象"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#linux-驱动程序对象"}},[t._v("#")]),t._v(" Linux 驱动程序对象")]),t._v(" "),e("p",[t._v("每个设备驱动都由"),e("code",[t._v("device_drive")]),t._v("对象描述, 在Linux 设备对象(struct device结构体)中, 有一个"),e("code",[t._v("driver")]),t._v("字段, 即表示设备对应的驱动程序, 详情请参考"),e("RouterLink",{attrs:{to:"/driver/modules/modules.html#device_driver"}},[t._v("Linux 驱动程序对象")])],1),t._v(" "),e("h3",{attrs:{id:"linux-类对象"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#linux-类对象"}},[t._v("#")]),t._v(" Linux 类对象")]),t._v(" "),e("p",[t._v("表示一类设备，使用"),e("code",[t._v("class")]),t._v("数据结构表示, 详情请参考"),e("RouterLink",{attrs:{to:"/driver/modules/modules.html#class"}},[t._v("Linux 类对象")])],1),t._v(" "),e("h2",{attrs:{id:"linux-设备文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#linux-设备文件"}},[t._v("#")]),t._v(" Linux 设备文件")]),t._v(" "),e("p",[t._v("设备标识符由设备文件的类型(字符或块)和一对参数组成，第一个参数称为主设备号, 长度为12位, 第二个参数为次设备号, 长度为20位, 通常这两个参数合并为一个32位的 dev_t 类型变量, 通过 MAJOR() 和 MINOR() 宏从 dev_t 类型变量中提取主设备号和次设备号, 通过 MKDEV() 宏将主设备号和次设备号合并成一个 dev_t 值")])])}),[],!1,null,null,null);e.default=s.exports}}]);