(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{438:function(t,r,i){"use strict";i.r(r);var a=i(2),e=Object(a.a)({},(function(){var t=this,r=t._self._c;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"i2c-设备驱动"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#i2c-设备驱动"}},[t._v("#")]),t._v(" I2C 设备驱动")]),t._v(" "),r("p",[t._v("I2C 设备驱动要使用 i2c_driver 和 i2c_client 数据结构并填充 i2c_driver 中的成员函数")]),t._v(" "),r("h2",{attrs:{id:"i2c-设备驱动的加载和卸载"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#i2c-设备驱动的加载和卸载"}},[t._v("#")]),t._v(" I2C 设备驱动的加载和卸载")]),t._v(" "),r("p",[t._v("在"),r("RouterLink",{attrs:{to:"/driver/i2c/i2c_core.html"}},[t._v("I2C 核心")]),t._v("中，提供了 I2C 设备驱动程序模块加载和卸载函数，即 i2c_add_driver 和  i2c_del_driver 函数")],1),t._v(" "),r("p",[t._v("一般而言, 为了更好的管理 i2c 设备驱动, 内核已经对 i2c 设备驱动进行了封装处理, 如 "),r("RouterLink",{attrs:{to:"/driver/platform/platform.html#platform_driver"}},[t._v("platform 驱动")]),t._v("也是对 struct device_driver 的封装一样")],1),t._v(" "),r("h2",{attrs:{id:"i2c-设备驱动的数据传输"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#i2c-设备驱动的数据传输"}},[t._v("#")]),t._v(" I2C 设备驱动的数据传输")]),t._v(" "),r("p",[t._v("在 I2C 设备上读写数据的时序通常通过 i2c_msg 数组进行，最有通过 i2c_transfer() 完成")])])}),[],!1,null,null,null);r.default=e.exports}}]);